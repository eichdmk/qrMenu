import { useMenu } from "../../hooks/useMenu";
import { reservationsAPI } from "../../api/reservations";
import { getStatusText, getStatusColor, formatDate, formatTime } from "../../utils/format";
import { toast } from "react-toastify";
import { useState, useEffect } from "react";
import styles from "./ReservationManager.module.css";

function ReservationManager() {
  const [reservations, setReservations] = useState([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    fetchReservations();
  }, []);

  const fetchReservations = async () => {
    try {
      const response = await reservationsAPI.getAll();
      setReservations(response.data);
    } catch (error) {
      toast.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π");
    } finally {
      setLoading(false);
    }
  };

  const handleStatusChange = async (id, newStatus) => {
    try {
      await reservationsAPI.updateStatus(id, { status: newStatus });
      toast.success("–°—Ç–∞—Ç—É—Å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –æ–±–Ω–æ–≤–ª—ë–Ω");
      fetchReservations()
    } catch (error) {
      toast.error(error.response?.data?.message || "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞");
    }
  };

  const handleDelete = async (id) => {
    if (!confirm("–£–¥–∞–ª–∏—Ç—å —ç—Ç–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.")) return;

    try {
      await reservationsAPI.delete(id);
      toast.success("–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ");
      fetchReservations();
    } catch (error) {
      toast.error(error.response?.data?.message || "–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è");
    }
  };

  if (loading) {
    return <p>–ó–∞–≥—Ä—É–∑–∫–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π...</p>;
  }

  return (
    <div className={styles.manager}>
      {reservations.length > 0 ? (
        <div className={styles.reservationsList}>
          {reservations.map((res) => (
            <div key={res.id} className={styles.reservationCard}>
              <div className={styles.reservationHeader}>
                <h4>–ë—Ä–æ–Ω—å #{res.id}</h4>
                <span
                  className={styles.status}
                  style={{ backgroundColor: getStatusColor(res.status, 'reservation') }}
                >
                  {getStatusText(res.status, 'reservation')}
                </span>
              </div>
              <div className={styles.reservationDetails}>
                <p><strong>–ò–º—è:</strong> {res.customer_name}</p>
                <p><strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> {res.customer_phone}</p>
                <p><strong>–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è:</strong> {formatDate(res.start_at)} {formatTime(res.start_at)}</p>
                <p><strong>–î–æ:</strong> {formatDate(res.end_at)} {formatTime(res.end_at)}</p>
                <p><strong>–°—Ç–æ–ª–∏–∫:</strong> ‚Ññ{res.table_name}</p>
                <p><strong>–°—Ç–∞—Ç—É—Å:</strong> {res.status}</p>
              </div>
              <div className={styles.reservationActions}>
                <select
                  value={res.status}
                  onChange={(e) => handleStatusChange(res.id, e.target.value)}
                  className={styles.statusSelect}
                >
                  <option value="pending">–û–∂–∏–¥–∞–µ—Ç</option>
                  <option value="confirmed">–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ</option>
                  <option value="cancelled">–û—Ç–º–µ–Ω–µ–Ω–æ</option>
                </select>
                <button onClick={() => handleDelete(res.id)} className={styles.deleteButton}>
                  üóëÔ∏è
                </button>
              </div>
            </div>
          ))}
        </div>
      ) : (
        <p>–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π –ø–æ–∫–∞ –Ω–µ—Ç.</p>
      )}
    </div>
  );
}

export default ReservationManager;